
server.error.whitelabel.enabled=false
#server.servlet.context-path=/spring-boot-keycloak

# Default spring profile. Profile definition in context.xml or in program arguments as --spring.profiles.active overrides it.
spring.profiles.active=local

#spring.autoconfigure.exclude=org.keycloak.adapters.springboot.KeycloakAutoConfiguration


keycloak.realm=demo
keycloak.auth-server-url=http://localhost:8180/auth
keycloak.resource=spring-boot-keycloak-app
keycloak.public-client=true
keycloak.ssl-required=external
keycloak.confidential-port=0
keycloak.use-resource-role-mappings = true
keycloak.securityConstraints[0].authRoles[0]=editor
keycloak.securityConstraints[0].securityCollections[0].patterns[0]=/realm/1
keycloak.principal-attribute=preferred_username


#keycloak.realm=zoom
#keycloak.auth-server-url=http://localhost:8180/auth
#keycloak.resource=spring-boot-multi-tenant-app
#keycloak.public-client=true
#keycloak.ssl-required=external
#keycloak.confidential-port=0
#keycloak.use-resource-role-mappings = true
#keycloak.securityConstraints[0].authRoles[0]=owner
#keycloak.securityConstraints[0].securityCollections[0].patterns[0]=/realm/1
#keycloak.principal-attribute=preferred_username


# Values behind $ are taken from git.properties file( this file is generated by git-commit-id mvn plugin)
# We are mapping them to below written properties with prefix git.state which are used to create GitStatePropertyHolder bean.
#git:
#  state:
#    tag: ${git.tags}
#    branch: ${git.branch}
#    dirty: ${git.dirty}
#    remoteOriginUrl: ${git.remote.origin.url}
#    commitId: ${git.commit.id}
#    commitIdAbbrev: ${git.commit.id.abbrev}
#    describe: ${git.commit.id.describe}
#    describeShort: ${git.commit.id.describe-short}
#    commitUserName: ${git.commit.user.name}
#    commitUserEmail: ${git.commit.user.email}
#    commitMessageFull: ${git.commit.message.full}
#    commitMessageShort: ${git.commit.message.short}
#    commitTime: ${git.commit.time}
#    closestTagName: ${git.closest.tag.name}
#    closestTagCommitCount: ${git.closest.tag.commit.count}
#    buildUserName: ${git.build.user.name}
#    buildUserEmail: ${git.build.user.email}
#    buildTime: ${git.build.time}
#    buildHost: ${git.build.host}
#    buildVersion: ${git.build.version}

