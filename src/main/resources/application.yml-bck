# This is a template configuration file for Equipment Health Services (EHS) project. This file is always loaded as basic configuration file.
# Profile specified properties are defined in application-{profile}.yml according to set active profile (spring.profiles.active)
# The spring.profiles.active property with active profile is defined in catalina.properties file
# We are using externalized profile property file (property files on file systems has priority against to files in classpath). These
# property files lives on path defined in catalina.properties file on JVM

server:
  error:
    whitelabel:
      enabled: false
  servlet:
    context-path: /spring-boot-keycloak

# Default spring profile. Profile definition in context.xml or in program arguments as --spring.profiles.active overrides it.
spring:
  profiles:
    active:
    - local


keycloak:
  # enable by default
  enabled: true
  realm: demo
  auth-server-url: http://localhost:8180/auth
  resource: spring-boot-keycloak-app
  public-client: true
  ssl-required: external
  confidential-port: 0

  security-constraints:
    - securityCollections:
      - patterns:
        - /rest/*


# EXAMPLE
# keycloak:
#  cors: true
#  realm: Boot-Project
#  realmKey: AARjANBgkqhkiYUitdhjnCAQ8AMIIBCgKCAQEArOS/TTjkgjdoiQ7F6m5x206lJ+K9VBpEjkjrignxIdH7pJDWv9UMg2CL1q3Tfkjg/YdjkljgkbsnqrSzjBcIU5HQ2AQLkRm2eCPuLIB23d2VS3hZGqvbyqN42hbk/oRhloS0tS2/frq4fIeU53KQiRPPiBt1IEO7DINoDUXdyOWS7g/rSrMkjjUm9SohXdv8u3aB+mnI8gNwEag17Cj+wqoc1smPj5jb/8Ab3MynQHv4ekgXYFPI5BEQSXXflBLbL2kjqR2xP8y8XTsOz58XLyWBydjN2R37uds9D2TqipU3tdc286b276RhNCwIDAQAB
#  auth-server-url: https://${__AUTH_VM__:localhost}/auth
#  ssl-required: none
#  resource: myproject
#  bearer-only: true
#  public-client: false
#  credentials:
#    secret: ls5f7c3g-d045-444f-8234-6cth6970726y
#  securityConstraints[0]:
#    securityCollections[0]:
#      name: secured context api and app
#      authRoles:
#        - commongui
#      patterns:
#        - /contexts/*
#        - /config.json


# Values behind $ are taken from git.properties file( this file is generated by git-commit-id mvn plugin)
# We are mapping them to below written properties with prefix git.state which are used to create GitStatePropertyHolder bean.
#git:
#  state:
#    tag: ${git.tags}
#    branch: ${git.branch}
#    dirty: ${git.dirty}
#    remoteOriginUrl: ${git.remote.origin.url}
#    commitId: ${git.commit.id}
#    commitIdAbbrev: ${git.commit.id.abbrev}
#    describe: ${git.commit.id.describe}
#    describeShort: ${git.commit.id.describe-short}
#    commitUserName: ${git.commit.user.name}
#    commitUserEmail: ${git.commit.user.email}
#    commitMessageFull: ${git.commit.message.full}
#    commitMessageShort: ${git.commit.message.short}
#    commitTime: ${git.commit.time}
#    closestTagName: ${git.closest.tag.name}
#    closestTagCommitCount: ${git.closest.tag.commit.count}
#    buildUserName: ${git.build.user.name}
#    buildUserEmail: ${git.build.user.email}
#    buildTime: ${git.build.time}
#    buildHost: ${git.build.host}
#    buildVersion: ${git.build.version}

